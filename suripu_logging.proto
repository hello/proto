//package hello;

option java_package = "com.hello.suripu.api.logging";
option java_outer_classname = "LoggingProtos";
// option optimize_for = SPEED;


message LogMessage {
    optional string origin = 1;
    optional string message = 2;
    optional int64 ts = 3;
    optional bool production = 4 [default = false];
    optional int32 level = 5;
    optional string device_id = 6;
    optional string middle_fw_version = 7;
    optional string top_fw_version = 8;
}


message BatchLogMessage {

    enum LogType {
        APPLICATION_LOG = 0;
        SENSE_LOG = 1;
        WORKERS_LOG = 2;
        STRUCTURED_SENSE_LOG = 3;
        ONBOARDING_LOG = 4;
        TIMELINE_LOG = 5;
    }

    repeated LogMessage messages = 1;
    optional string app_version = 2;
    optional LogType log_type = 3;
    optional int64 received_at = 4;
    repeated RegistrationLog registration_log = 5;
    repeated TimelineLog timeline_log = 6;
}

message HttpRequest {
    message Header {
        optional string name = 1;
        optional string value = 2;
    }
    optional string path = 1;
    optional string access_token = 2;
    optional int64 account_id = 3;
    optional int64 application_id = 4;
    optional int64 timestamp_utc = 5;
    repeated string required_scopes = 6;
    repeated string provided_scopes = 7;
    optional int64 access_token_created_at = 8;
    optional string user_agent = 9;
    repeated Header headers = 10;
}


message Registration {
    optional string device_id = 1;
    optional int64 timestamp = 2;
    optional int64 account_id = 3;
    optional string ip_address = 4;
}

message RegistrationLog {
    optional string sense_id = 1;
    optional int64 timestamp = 2;
    optional int64 account_id = 3;
    optional string ip_address = 4;
    optional string action = 5;
    optional string pill_id = 6;
    optional string result = 7;
    optional string info = 8;
}

message DecryptionError {
    optional string device_id = 1;
    optional string keyHex = 2;
    optional int64  ts = 3;
    optional bytes  request_body = 4;
    optional string other = 5;
}


message ProvisionRequest {
    optional bytes body = 1;
    optional string serial_number = 2;
    optional int64 ts = 3;
    optional string ip_address = 4;
}

//one log message to rule the algs
//think of it as polymorphism--a lot of the optional fields will not be there 
message TimelineLog {
    enum AlgType {
        NO_ALGORITHM = 0; 
        WUPANG = 1;
        HMM = 2;
        VOTING = 3;
        ONLINE_HMM = 4;
    }

    //mutually exclusive list of errors
    enum ErrorType {
        NO_ERROR = 0;
        INTENDED_ALGORITHM_FAILURE = 1;
        TIMESPAN_TOO_SHORT = 2;
        NOT_ENOUGH_DATA = 3;
        NO_DATA = 4;
        LOW_AMPLITUDE_DATA = 5;
        PARTNER_FILTER_REJECTED_MY_DATA = 6;
        MISSING_KEY_EVENTS = 7;
        INVALID_SLEEP_SCORE = 8;
        NOT_ENOUGH_SLEEP_TIME = 9;
    }

    enum EventType {
        NO_EVENT = 0;
        IN_BED = 1;
        SLEEP = 2;
        WAKE = 3;
        OUT_OF_BED = 4;
    }

    message Prediction {
        optional EventType event_type = 1;
        optional int64 event_time_utc_millis = 2;
        optional int32 timezone_offset_millis = 3;
    }

    optional int64 account_id = 1;
    optional int64 timestamp_when_log_generated = 2;
    optional int64 night_of_timeline = 3;
    optional AlgType algorithm = 4;
    optional ErrorType error = 5;
    optional int64 log_uuid_upper = 6; //UUID to match this against server logs
    optional int64 log_uuid_lower = 7; //UUID to """"
    optional float model_score = 8;
    optional string model_name = 9;
    repeated Prediction predictions = 10;

}


